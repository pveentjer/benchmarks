#!/usr/bin/env bash
##
## Copyright 2015-2025 Real Logic Limited.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## https://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

set -exo pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

export class_name=${1##*.}
log_file_name=${PROCESS_FILE_NAME:-${class_name}-%p}
if [ -d /dev/shm ]; then
  gc_log_file="/dev/shm/${log_file_name}-gc.log"
  error_log_file="/dev/shm/${log_file_name}-crash.log"
else
  gc_log_file="/tmp/${log_file_name}-gc.log"
  error_log_file="/tmp/${log_file_name}-crash.log"
fi

java_options=(
  -Djava.net.preferIPv4Stack=true
  -Djava.net.preferIPv6Addresses=false
  -XX:+UnlockExperimentalVMOptions
  -XX:+TrustFinalNonStaticFields
  -XX:+UnlockDiagnosticVMOptions
  -XX:+DebugNonSafepoints
  -XX:+UseParallelGC
  -XX:ErrorFile="${error_log_file}"
  -Xms4G
  -Xmx4G
  -XX:+AlwaysPreTouch
  -XX:MaxMetaspaceSize=1G
  -XX:ReservedCodeCacheSize=1G
  -XX:+EnableDynamicAgentLoading
  "-Xlog:gc*,safepoint=info,arguments=info:file=${gc_log_file}:time")

add_opens=(--add-opens java.base/java.util.zip=ALL-UNNAMED --add-opens java.base/jdk.internal.misc=ALL-UNNAMED)

jvm_opts=()

if [[ -v JVM_OPTS && -n "${JVM_OPTS}" ]]
then
  IFS=' ';
  read -ra jvm_opts <<< "${JVM_OPTS}"
  unset IFS;
fi

declare -A SYS_PROPS

for opt in "${jvm_opts[@]}"; do
  if [[ $opt == -D*=* ]]; then
    kv="${opt#-D}"
    name="${kv%%=*}"
    val="${kv#*=}"
    echo "key=${name} value=${val}"
    SYS_PROPS[$name]="$val"
  fi
done
# second step is to replace the placeholder by their values.
for i in "${!jvm_opts[@]}"; do
  opt="${jvm_opts[$i]}"

  # repeat until no [KEY] remains
  while [[ $opt =~ \[([A-Za-z_][A-Za-z0-9_\.]*)\] ]]; do
    key="${BASH_REMATCH[1]}"

    if [[ -v $key ]]; then
      val="${!key}"
    elif [[ -n "${SYS_PROPS[$key]+x}" ]]; then
      val="${SYS_PROPS[$key]}"
    else
      echo "Warning: no value for placeholder [$key]"
      val=""
    fi

    opt="${opt//\[$key\]/$val}"
  done

  jvm_opts[$i]="$opt"
done

echo "Resolved jvm_opts:"
printf '  %s\n' "${jvm_opts[@]}"

if [[ -n "${SYS_PROPS['io.aeron.benchmarks.output.directory']}" ]]; then
  # the directory is made late and this leads to problems with e.g. async-profiler that
  # requires for the directory to exist. So this forces the directory to be made before
  # the java process is started.
  output_dir="${SYS_PROPS['io.aeron.benchmarks.output.directory']}"
  echo "Creating output directory: $output_dir"
  mkdir -p "$output_dir"
fi


exec "${JAVA_HOME}/bin/java" \
  -cp "${DIR}/../benchmarks-all/build/libs/benchmarks.jar" \
  "${java_options[@]}" \
  "${add_opens[@]}" \
  "${jvm_opts[@]}" \
  "$@"
